#+STARTUP: content
#+AUTHOR: benford
#+HUGO_BASE_DIR: .
#+HUGO_AUTO_SET_LASTMOD: t
* Home
:PROPERTIES:
:EXPORT_HUGO_SECTION:
:EXPORT_HUGO_MENU: :menu "main" :weight 1
:EXPORT_FILE_NAME: _index
:END:

* Home Section
:PROPERTIES:
:EXPORT_HUGO_SECTION: home
:EXPORT_HUGO_HEADLESS: t
:EXPORT_HUGO_WEIGHT: 1
:END:
** Elite software development
:PROPERTIES:
:EXPORT_FILE_NAME: elite-development
:EXPORT_HUGO_HEADLESS: t
:END:
In the Royal Marines we used to say elite performance is a state of mind. I can
show you what that means for software development.
# {{< header imgurl="/img/cdo-memorial-crop.jpg" >}}
# {{< /header >}}

** DONE Who am I?
CLOSED: [2019-02-03 Sun 19:38]
:PROPERTIES:
:EXPORT_FILE_NAME: who-am-i
:EXPORT_HUGO_HEADLESS: t
:END:
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-02-03 Sun 19:38]
:END:

Have you built an MVP, followed the lean start up way and achieved product
market fit? Are you now at the point where you are going to start scaling your
business, adding more people and accelerating the execution of your mission?


{{% emphasis %}}What's your strategy?{{% /emphasis %}}


The behaviours and tactics that worked to get you out of the blocks and running
are not the same as those required to achieve and maintain scaleable growth.
Getting this transition right is incredibly important: do it too early and
you'll stifle your ability to iterate with a small team. Do it too late, or not
at all, and you'll be trying to layer more people into a chaotic environment and
you'll kill their ability to deliver.

I've been in many of these situations over the last 10 years in tech. An
organisation scaling up without putting the right systems in place is a horrible
place to be. No matter how strong the founder's vision and how compelling the
mission, without the *right foundations* the company lurches from one crisis to
another and can't deliver. It's a stressful, frustrating experience that drives
the best people out of the company.

{{% emphasis cls="text-uppercase" %}}I can help{{% /emphasis %}}

Before I had a career in tech I was a *Royal Marine Commando*, and it's there that
I learned the essence of building a high performance culture. What I do now for
my customers is to translate the operational excellence that's driven the corps'
evolution for the last 3 and a half centuries to a set of systems for tech
businesses.

It's all based on a *single abstraction*. Understanding this one thing is what
allows you to understand the *10,000 things* that are required for elite
performance and continuous improvement in the face of change.


** DONE Principles
CLOSED: [2019-02-03 Sun 19:38]
:PROPERTIES:
:EXPORT_FILE_NAME: principle
:EXPORT_HUGO_HEADLESS: t
:END:
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-02-03 Sun 19:38]
:END:

# {{% blockquote title="Principle" source="Google Dictionary" %}}
# /ˈprɪnsɪp(ə)l/
# noun
# 1. a fundamental truth or proposition that serves as the foundation for a system
#    of belief or behaviour or for a chain of reasoning. "the basic principles of
#    justice"
# 2. a general scientific theorem or law that has numerous special applications
#    across a wide field.

# synonyms:	truth, proposition, concept, idea, theory, postulate; More
# {{% /blockquote %}}
Over my decade plus career in software development, I've experienced the feeling
of being in teams using the wrong processes and not adapting to their realities
fast enough. This includes everything from start ups where I was the first
programmer on board, to building teams in global mega banks.

About 4 years ago my brain basically short circuited itself and banned me from
learning more tech stuff until I figured out how to make the point at which the
rubber meets the road work better: *People and teams*.

As I researched more and began to understand what makes a great development
team, I started to recognise the underlying principles. They were things I had
already learned, and in fact deeply ingrained, but not recognised when I was a
*Royal Marine* in the early 2000s.


Having this moment of recognition was a breakthrough, because it showed me that
once you are able to translate something from one domain to another and keep the
essence of why it works, you have your hands on a fundamental principle. This is
nothing new. The famous swordsman Myamoto Musashi knew this way back in the
1600s, as the quote above shows.

So what if you could understand a *SINGLE PRINCIPLE* and from that drive the
evolution of your organisation's operating system?

{{% emphasis %}}This is what I want to show you.{{% /emphasis %}}

The single principle that's you must understand to achieve the *operational
excellence* that every business needs to *thrive* and *scale*.

The single principle that unites the 3 pillars of *PURPOSE* *PEOPLE* and *PRACTICES*

<<purpose>>
** DONE Purpose and Mission
CLOSED: [2019-02-03 Sun 19:36]
:PROPERTIES:
:EXPORT_FILE_NAME: purpose
:EXPORT_HUGO_HEADLESS: t
:END:
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-02-03 Sun 19:36]
:END:

What is your company's reason for being? What's its purpose? What's the one
mission that gets your people fired up for work in the morning?

It's critical that there's a consistent, concise message, which is shared across
the whole organisation, laying out why you're here. A company's mission is the
*WHY* that gets people pulling in the same direction.

Imagine a bunch of iron filings scattered onto a plate. Their orientation is
random there's no discernable pattern. As soon as you bring a magnet within
range though, the filings line up with an invisible force and organise
themselves to point the right direction. *MISSON* is magnetism for people.

# {{< header imgurl="/img/40-cdo-afghanistan.jpg" >}}
# {{< /header >}}

<<people>>
** DONE People and Culture
CLOSED: [2019-02-03 Sun 19:36]
:PROPERTIES:
:EXPORT_FILE_NAME: people
:EXPORT_HUGO_HEADLESS: t
:END:
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-02-03 Sun 19:36]
:END:

Companies always say that "their people are their greatest asset". But how do you
ensure that's really true? How do you build a cohesive team who support and push
each other to greatness?

If mission is the direction you're headed in and why you're making your change
in the world the culture that develops is the vessel that will take you there.
Culture is *WHO* you are. The conditions and constraints you put in place define
what that culture becomes.

You don't build a culture it is *EMERGENT* based on the environment in which it
grows.


<<practices>>
** DONE Practices and Process
CLOSED: [2019-02-03 Sun 19:36]
:PROPERTIES:
:EXPORT_FILE_NAME: practices
:EXPORT_HUGO_HEADLESS: t
:END:
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-02-03 Sun 19:36]
:END:

When you know you do something well, when you've really nailed it, is it
repeatable? Can you teach anyone to achieve the same level of *excellence* you
have reached?

*Process* can be a bit of a dirty word in software development. It conjures up
images of big A agile consultants enforcing rituals and ceremonies that
ultimately do nothing to improve performance and everything to destroy morale.
Most professional developers will have at least one horror story of working in a
place that fell for this kind of cargo culting.

That's why I prefer to think in terms of *PRACTICES*

Practices are your playbooks. In the Royal Marines we would refer to these as
*SOPs*: Standard Operating Procedures. They are constantly evolving, improving
instructions that point the way to ever increasing performance.

** DONE The OODA loop
CLOSED: [2019-02-03 Sun 19:36]
:PROPERTIES:
:EXPORT_FILE_NAME: ooda
:EXPORT_HUGO_HEADLESS: t
:END:
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-02-03 Sun 19:36]
:END:

It's the *OODA loop*.

The OODA loop is the unifying theory of competition from the mind of *Col. John
Boyd*. It's short for *Observe* *Orient* *Decide* *Act* and understanding this
process is critical to understanding how organisms and organisations relate to
and thrive within their environments.

Col. Boyd was a USAF officer who, despite his relatively lowly rank, cut an
absolute swathe through US defence policy in the late 20th century. Not content
with completely reshaping how airforces comprehend air to air combat and
manoeuvrability in the 50s and 60s, Boyd spent the next 4 decades re-writing the
book on military *strategy and tactics*. He was even instrumental in the design of
the campaign that smashed the Iraqi army and led to the liberation of Kuwait in
first Gulf war of the early 90s.

What came out of this period was a complete rethink on the laws and structure of
conflict, condensed down to a tiny amount of published output. What Boyd was able
to do was take several millennia of learning, from *The Art of War* to the
*Blitzkrieg*, and refine it down to a briefing and a couple of published papers.
Boyd's particular gift lay in combining knowledge from different fields of
endeavour into new conceptual frameworks. So his work on the OODA loop has
proven to be very applicable to domains outside of combat in the intervening
years.

It makes sense when you think about it. Conflict is a crucible that's been
running for thousands of years. Almost like *forced evolution* - the fittest
survive and the weakest do not. What works is refined again and again and what
doesn't work is stripped away over time. Boyd's work on the OODA loop, and some
of his other contributions, take the output from that crucible and extract the
*essential structure* that make it all work. Small wonder then that this is a theory
that can be applied to pretty much everything.

** DONE What people say
CLOSED: [2019-02-03 Sun 19:36]
:PROPERTIES:
:EXPORT_FILE_NAME: what-people-say
:EXPORT_HUGO_HEADLESS: t
:END:
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-02-03 Sun 19:36]
:END:
People say Ben is great

** DONE The Process
CLOSED: [2019-02-03 Sun 19:36]
:PROPERTIES:
:EXPORT_HUGO_SECTION: home
:EXPORT_FILE_NAME: the-process
:EXPORT_HUGO_HEADLESS: t
:END:
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-02-03 Sun 19:36]
:END:
Working with me
* Mission Section
:PROPERTIES:
:EXPORT_HUGO_SECTION:
:EXPORT_HUGO_BUNDLE: mission
:EXPORT_HUGO_TYPE: mission
:END:
** Mission
:PROPERTIES:
:EXPORT_FILE_NAME: index
:EXPORT_HUGO_MENU: :menu "main" :weight 2
:END:
My mission is to teach growing tech companies how to achieve and maintain
*operational excellence* as they scale

** The problem
:PROPERTIES:
:EXPORT_FILE_NAME: the-problem
:END:
Starting something is hard. You sweat, struggle and persist and you're off and
running, you start to gain momentum. You build a team around you of dedicated
*commandos*. The ones who take risks, get shit done and make things happen - the
starters. The company is small, communications overhead is minimal and you're
focused on becoming sustainable and proving your viability.

{{% emphasis %}}But then what?{{% /emphasis %}}
** Scaling
:PROPERTIES:
:EXPORT_FILE_NAME: scaling
:END:

Then you start to scale up. You get more revenue, or you take on some funding.
There's more to do, so you add more people. You need to lift your eyes from the
road in front and look to the horizon, so you add *structure* and start making
plans.

Suddenly you can't move as fast as you did before. Your commandos find structure
constrictive and start to leave. A hierarchy begins to form, which slows
*communications* down and introduces noise into the system. The mission becomes
blurry and people aren't sure how what they are doing contributes to the *purpose*
of this grand enterprise that you've put in motion.

There are organisations that have figured out how to move fast, while remaining
oriented on their goals and grounded in who they are. They get the best out of
people in insanely challenging circumstances, often under ludicrous *constraints*.
They operate by consistently holding themselves to standards that are
universally understood and shared. The foundations of this ability are
*operational excellence*, which enables *continuous improvement* and evolution.

** Performing
:PROPERTIES:
:EXPORT_FILE_NAME: performing
:END:


One such organisation which has been learning and honing these lessons for over
350 years is the *Royal Marines*. Way before I was a software developer I served
in the corps, in fact I [[/about/][taught myself how to code]] en route to the second Iraq
war on board a ship. When I began my second career in software development I
looked up my time in the corps as something fun and challenging that had
certainly shaped me personally, but that didn't have much bearing on my new
direction.

{{% emphasis %}}I was wrong.{{% /emphasis %}}


** The Royal Marines
:PROPERTIES:
:EXPORT_FILE_NAME: the-rm
:END:
The Royal Marines have evolved from a regiment of maritime foot soldiers formed
in 1664 through constant evolution to today's role as an elite, commando trained,
rapid reaction force. They have *high performance* figured out, and can teach it
with a repeatable process that's been forged in the fire of *consistent improvement*
since the time we've had armies.

When I started to realise just what fundamental lessons I'd been exposed to in
the corps I spent all my spare time working out how to distil those lessons down
to the *fundamental principles* which could be used in any domain. While the
principles are universal - the implementation of teaching them in the corps
involves lots of cold water and certainly wouldn't suit everyone.

** Why I'm here
:PROPERTIES:
:EXPORT_FILE_NAME: why-im-here
:END:

So that's why I'm here.

I want to show you how to apply the foundational principles that underpin elite
performance to your tech business so that you can make your difference in the world.

* About Section
:PROPERTIES:
:EXPORT_HUGO_SECTION:
:EXPORT_HUGO_BUNDLE: about
:EXPORT_HUGO_TYPE: about
:END:
** About
:PROPERTIES:
:EXPORT_FILE_NAME: index
:EXPORT_HUGO_MENU: :menu "main" :weight 4
:END:
I learned to code on a warship in 2003 on the way to Iraq. I've been a commando,
a bouncer, a refuse collector, a programmer and a tech team builder and leader.

** My Story
:PROPERTIES:
:EXPORT_FILE_NAME: my-story
:END:
My father is an engineer and we spent much of my early childhood in Africa
(Malawi and Lesotho) and the Caribbean (Jamaica).

Having grown up in so many different cultures meant that moving back to the UK
and fitting into a homogeneous environment was a bit of a challenge and
strengthened my naturally *introspective* nature. Being somewhat isolated during
my school years did however strengthen my intense *curiosity*. It also served to
direct that curiosity away from just figuring out physical objects (I loved to
pull things apart and put them back together) and towards trying to figure out
people. This obsession has lasted ever since.

Like many people of my generation, *bullying* was a feature of growing up. I'm
sure that was a major driver that lead me at about 13 or 14 to decide that I
would one day join the Royal Marine Commandos. This to my young eyes epitomised
toughness and fitting in to a close-knit social structure that had eluded me at
school.
** The Royal Marines
:PROPERTIES:
:EXPORT_FILE_NAME: the-rm
:END:

Having decided on the Royal Marines in my teens, I didn't actually end up
joining until I was just shy of my 23rd birthday. This put me towards the older
end of the intake (although thankfully not as old as "grandad" the ancient 25
year old).

*Commando training* was a monumental challenge, as it's designed to be. I remain
incredibly proud of earning my *green beret*, but it was really the lessons I
learned about communicating with people (mainly taught through the medium of
doing it incredibly poorly) that I feel were the most important benefit from
that extremely intense period of my life.

During my 4 years in the corps I completed operational tours of *Sierra Leone*
shortly after the brutal civil war, the bandit country of *South Armagh* in the
closing years of the troubles in Northern Ireland, and finally *Op Telic 1: the
second gulf war* in 2003.

The Royal Marines is a special kind of unit with its own ethos, but ultimately,
like almost all military units, it's a very rigid and hierarchical. You either
fit into that *structure* or you don't. I decided that I wasn't going to make it a
career until I had a pension, and I was also sceptical that the way the war
against terror was escalating was the right course so in about 2003 I began
thinking about what would come next.

** Teaching myself programming
:PROPERTIES:
:EXPORT_FILE_NAME: teaching-myself
:END:

In 2003 the unit I was part of, Commando Helicopter Force, was tasked with
supporting the invasion of *Iraq*. We were embarked aboard HMS Ocean, and in early
2003 we set sail from Plymouth, bound for the middle east.

There was a lot of time on board ship and I had a shiny new laptop with me that
a friend had convinced me to put *Linux* on. In the process of installing Red Hat
(and bricking the laptop) I had come across the seminal [[http://www.catb.org/esr/faqs/hacker-howto.html][How to Become a Hacker]]
faq by Eric S Raymond, so after we got underway I begged some internet access in
the ships communications centre and bought a book on *python* from amazon. Over
the next few weeks in my down time below desks, with no internet access I banged
my head against it until I had roughly figured out how to write a computer
program.

** Progression
:PROPERTIES:
:EXPORT_FILE_NAME: progression
:END:

I left the Royal Marines in 2004 and went into *telecoms* operations. The
difference in technology in a modern 3G network compared to what I was working
with in the corps (40 year old analog tech) was stark, and I was also able to
work parts of my embryonic programming skills into my roles. A script to ping
hosts here, a reporting tool there. Finally I was up to the point of making
django web apps by about 2006 which took me to Indonesia and my first foray into
*entrepreneurship*. I also met the *love of my life* and got married!

In 2008 we moved back to the UK and I moved into a career as a full time
programmer. At this point in my life I mostly looked at my time in the Royal
Marines as something that was a great *challenge* and great fun, but as something
separate from my new career.

{{% emphasis %}}I was *so* wrong.{{% /emphasis %}}

** Full circle
:PROPERTIES:
:EXPORT_FILE_NAME: full-circle
:END:

Fast forward a few years, having gone through a few programming languages to
settle on *Haskell* and a few jobs in finance and start ups and I started to
realise that the experiences I was exposed to in the Royal Marines were
absolutely foundational to understanding performance and how people work
together. I have always been an avid reader and as my technical skills matured I
started to refocus on my fascination with *leadership* and people. Eventually I
read and experienced enough to start making connections between different
fields. I began to see commonalities across learning and leadership in the
forces and technical projects. I began to see how lessons from my martial arts
practice apply to learning a new programming language or operational skill.

There's a concept from Japanese zen which captures this process perfectly.
*Ensō* symbolises enlightenment and the void, which I think is fitting. Often
when you have an intellectual or spiritual breakthrough you realise that you
haven't got somewhere new, but that you have returned to the beginning with a
mindset for new understanding

* Writing
:PROPERTIES:
:EXPORT_HUGO_SECTION: writing
:EXPORT_HUGO_TYPE: article
:END:
** Articles
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_MENU: :menu "main" :weight 3
:END:

# :EXPORT_HUGO_MENU: :menu "main"
This is where I write about teams, performance and what we can learn from the military.

** TODO Ethos
SCHEDULED: <2019-04-27 Sat>
:PROPERTIES:
:EXPORT_FILE_NAME: ethos
:EXPORT_HUGO_MENU: :parent writing
:END:
First blog post about ethos and stuff

** TODO Mission
SCHEDULED: <2019-04-28 Sun>
:PROPERTIES:
:EXPORT_FILE_NAME: mission
:EXPORT_HUGO_MENU: :parent writing
:END:
Mission really is everything
** TODO Bi-modal thinking                                                :article:
SCHEDULED: <2019-04-29 Mon>
:PROPERTIES:
:EXPORT_FILE_NAME: intuition-vs-cognition
:EXPORT_HUGO_MENU: :parent writing
:END:
[[https://www.kotterinc.com/research-and-perspectives/survive-thrive/][Survive + Thrive - Kotter]]
** TODO Functional people abstractions                                   :article:
SCHEDULED: <2019-06-24 Mon>
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: fpp-abstractions
:EXPORT_HUGO_MENU: :parent writing
:END:
*** Functional people abstractions
:PROPERTIES:
:EXPORT_FILE_NAME: index
:END:
One of the primary drives programmers have is to uncover and use the right
abstractions. That's also one of the things that draws people to functional
programming: the abstractions we use in FP are fundamental, atomic and based on
maths and logic.

<!--more-->

The main reason we seek abstractions like this are so that we
can decrease cognitive overhead by [[https://en.wikipedia.org/wiki/Chunking_(psychology)][Chunking]] knowledge into composable, related
concepts.

What if you could use the same principle, and even some of the same
abstractions, to reason about people and teams delivering software?


So what might some fundamental abstractions look like for teams and the process
of shipping code? What we're looking for here are some mental models [fn:1]

**** What makes a good abstraction?
Before we dive into this I want to take just a short detour to put some
constraints around what benefits we want to accrue from the mental tools we choose.

**** The OODA loop
***** Observe
***** Orient
***** Decide
***** Act
***** Destruction and Creation
** DONE I joined the Royal Marines 19 years ago today                    :article:
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: joining-the-royal-marines
:EXPORT_HUGO_MENU: :parent writing
:END:
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-06-24 Mon 06:51]
:END:
*** I joined the Royal Marines 19 years ago today
CLOSED: [2019-05-01 Wed 06:51] SCHEDULED: <2019-05-01 Wed>
:PROPERTIES:
:EXPORT_FILE_NAME: index
:END:
So it's as good an opportunity as any to reflect on some of lessons that incredibly
intense period of my life taught me.


<!--more-->

**** Standards matter
How does a new hire experience joining your organisation? How do you impart the
culture, values and mission of your company? Do you even have a common
understanding of what those are?

The Royal Marines take a bunch of very different individuals off the street
every two weeks to form a recruit troop of about 30. These men (still only men
for the time being) come from all walks and stages of life from the 16 year old
who's never left home before to someone in their late 20s who's had half a
career already. The corps then applies a process that in 7 months or so spits
about half of them out of the other end as elite commandos.

The men that pass out of basic training with their green berets are completely
different individuals from those that started. They've put on probably about a
stone of muscle and are capable of things they couldn't comprehend doing just
over half a year ago.

And it starts on day 1 week 1 with lesson 1: *How to wash.*

Yep. As a grown man striving to become an elite Royal Marine Commando the very
first thing you get shown is how to correctly wash your balls. Literally.

What kind of message is this sending?

The main one (which was compounded on a daily basis) is that there is an
expected standard and that standard is to be reached by everyone. No exceptions.

***** Takeaway
Onboarding is essential. How people experience their first few interactions as a
new member of the team will shape everything to come.

**** Knowledge is not the same as skill

When we received lesson #1 it wasn't a description. The whole troop shuffled
into the ablutions in towels and flip flops and our drill instructor physically
showed us. And then watched while we did it. This was the pattern for almost
every lesson. Very little theory, start doing immediately based on a clear
understanding of what's required.

*Show. Try. Correct. Repeat.*

Contrast this with how I went about learning my current programming language of
choice [[https://www.haskell.org/][Haskell]]: Read a book, read another book. Read a couple of academic papers
that deepen concepts in the books. I built up quite a lot of knowledge, and I
couldn't actually write Haskell for shit. That knowledge didn't start to
solidify into skill until I Actually. Started. Doing!

It's true that knowledge compounds, but knowledge doesn't really stick until
it's solidified with practice. The other observation here is that the order in
which you learn skills vs acquire knowledge is different and complimentary in
many ways.

***** Skills compose small to large
In the Royal Marines one example of this is:

 * Personal Discipline
 * Attention to Detail
 * Dry weapon handling
 * Live fire on the range
 * Dry section drills
 * Live section attacks in the field

Each skill builds upon and requires mastery of the one before.

What would this look like if we taught programming like this?

 * Bash
 * Git
 * How to use github
 * Editor/IDE set up and efficiency
 * Programming language
 * Algorithms

Almost the exact opposite of how most people traditionally learn :-)

***** Knowledge is deconstructed large to small
Often when we are taught something in an academic context it's presented as a
large concepts and broken down iteratively. This kind of iterative breakdown
also works really well for breaking down large scale plans and mission:

 * Purpose
 * Vision
 * Mission
 * Current Priority
 * Tasks

***** Takeaways

Bottom up skill building and top down knowledge breakdown compliment each other.

Think about how skills are developed and nurtured, after all:

#+BEGIN_QUOTE
We don't rise to the level of our expectations, we fall to the level of our
training -- Archilochus
#+END_QUOTE

**** Everyone leads
One of the key concepts in modern militaries is the concept of *mission
command*. Gen Stan McChrystal calls it empowered execution, Jocko Willink refers
to it as decentralised command.

No matter what you call it, the idea is that decision making should happen with
the people at the edges of the organisation - the ones in the fight. That means
that everyone is a leader. As the pace of change or level of uncertainty
increases, this becomes more and more essential.

**** Summary
This is getting a bit too long. There's a whole lot more to cover on what businesses
and tech can learn from military strategy and tactics. Conflict is a crucible
that distils only the essential and our best teachers in navigating modern
complexity may well be those whose writing has been tested the longest:

 * Musashi
 * Sun Tzu
 * John Boyd

Let me know in the comments, or [[https://twitter.com/commandodev][twitter]] what else you'd like to hear about.

** Discipline equals freedom
CLOSED: <2019-05-03 Fri>
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: discipline-equals-freedom
:EXPORT_HUGO_MENU: :parent writing
:END:
*** Discipline equals freedom
:PROPERTIES:
:EXPORT_FILE_NAME: index
:END:
I remember when I heard this phrase the first time. It was when Jocko Willink
first really burst into the light on Tim Ferriss' blog in 2015. I was starting to
realise just how much I had learned in the Royal Marines in the context of
building and leading development teams.

<!--more-->

Only a decade or so after I left the corps - I'm not the sharpest tool in the
box sometimes. :-)

I'd also drunk deeply of the typed functional programming kool aid, had used it in
anger to build a team at a start up, and had found it ridiculously effective. I
was primed to make some links between the two and the flash of inspiration came
in the form of 3 words:

#+BEGIN_QUOTE
*DISCIPLINE EQUALS FREEDOM*
#+END_QUOTE

What did I see in this seemingly simple statement?

To answer this let's first use the original quote from Aristotle, because it
more closely matches the intuition I had at the time:


#+BEGIN_QUOTE
*FROM DISCIPLINE COMES FREEDOM*
#+END_QUOTE

Some key observations drop out of this small rewording:

 * Discipline is not a static thing. It's not a binary state.
 * Freedom isn't a static thing either: It's a *vector* that has a magnitude and a
   direction.
 * Discipline doesn't equal freedom: Having more freedom is an *emergent* property
   of applying discipline.
 * Discipline, even though often spoken about as something one has, is not
   additive. It's actually about what you *take away*.

So what are we actually talking about here?

We're talking about applying *CONSTRAINTS* to *COMPLEX ADAPTIVE SYSTEMS* in
order to influence their *EMERGENT BEHAVIOURS*

So let's restate Jocko and Aristotle (alexa: what is hubris?) to:

#+BEGIN_QUOTE
*CONSTRAINTS* shape *BEHAVIOUR*
#+END_QUOTE

This is an incredibly profound principle, with implications for everything that
happens in any kind of human endeavour. For example:

Culture is an emergent property of the constraints applied to a group of
people. That means you don't get to create culture. The only thing you get to do
is shape are the constraints that form the system in which that culture evolves.

Quality is an emergent property of the constraints applied to a software
project. That means you don't get to create quality. The only thing you get to
shape are the constraints that inform how the software develops.

The kind of person your child develops into is an emergent property of the
constraints you apply as a parent. That means you don't get to create carbon
copies of yourself. How kids develop is an emergent property of the constraints
you (try to) apply as a parent.

**** Summary

We generally think of constraints with a negative connotation. Just look at some
of the synonyms: restriction, limitation, control, obstruction, impediment
*handicap*

These are all fair enough when you're in any kind of linear system. In a linear
world discipline doesn't equal freedom because you only would only see what you
can't do. But we do not live in a linear world. We live in a complex, networked
adaptive world and instead of shunning constraints, we should view them as
essential structure that we need to shape our path. How would you ever be able
to take on a novel challenge without understanding the constraints of the
project, if anything is theoretically possible, no tangible progress is actually
possible.

So let's restate these ideas one last time:

#+begin_quote
*STRUCTURE* enables *PROGRESS*
#+end_quote

Pay attention to the structures you put in place in your life and work. Progress
is a second order effect of the leverage you create.

** TODO Learning about learning
SCHEDULED: <2019-05-24 Fri>
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: learning-about-learning
:EXPORT_HUGO_MENU: :parent writing
:END:
*** Learning about learning
:PROPERTIES:
:EXPORT_FILE_NAME: index
:END:

A post about learning
** TODO Structure
SCHEDULED: <2019-05-24 Fri>
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: structure
:EXPORT_HUGO_MENU: :parent writing
:END:
*** Structure
:PROPERTIES:
:EXPORT_FILE_NAME: index
:END:

A blog post about structure
* Quotes
:PROPERTIES:
:EXPORT_HUGO_SECTION: quotes
:END:
** Know one thing
:PROPERTIES:
:EXPORT_FILE_NAME: know-one-thing
:EXPORT_AUTHOR: Myamoto Musashi
:END:
The principle of strategy is having one thing, to know ten thousand things

** Principle
:PROPERTIES:
:EXPORT_FILE_NAME: principle
:END:
/ˈprɪnsɪp(ə)l/
noun

1. a fundamental truth or proposition that serves as the foundation for a system
   of belief or behaviour or for a chain of reasoning. "the basic principles of
   justice"
2. a general scientific theorem or law that has numerous special applications
   across a wide field.

synonyms:	truth, proposition, concept, idea, theory, postulate; More

** Aligning Vectors
:PROPERTIES:
:EXPORT_FILE_NAME: aligning-vectors
:EXPORT_AUTHOR: Elon Musk
:END:
# https://thinkgrowth.org/what-elon-musk-taught-me-about-growing-a-business-c2c173f5bff3

Every person in your company is a vector. Your progress is determined by the
sum of all vectors.

** Lead like a gardener
:PROPERTIES:
:EXPORT_FILE_NAME: lead-like-a-gardener
:EXPORT_AUTHOR: Gen. Stanley McChrystal
:END:

A gardener creates an environment that encourages growth. An environment full of
light and nourishment. An environment with sufficient space for stretching and
expanding.

Leadership – and gardening – are all about creating positive change.

** Do nothing which is of no use
:PROPERTIES:
:EXPORT_FILE_NAME: do-nothing
:EXPORT_AUTHOR: Myamoto Musashi
:END:

Do nothing which is of no use.

Step by step walk the ten thousand mile road

** The Strategic game of ? and ?
:PROPERTIES:
:EXPORT_FILE_NAME: strategic-game
:EXPORT_AUTHOR: Col. John Boyd
:END:

Goal:

/Survive, survive on own terms, or improve our capacity for independent action./

The competition for limited resources to satisfy these desires may force one to:

/Diminish adversary’s capacity for independent action, or deny him the opportunity to survive on his terms, or make it impossible for him to survive at all./


* Brief
:PROPERTIES:
:EXPORT_HUGO_SECTION: brief
:END:

** Brief
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:END:

*** General info

This year I am launching a new business that leverages my unique background as
both a Royal Marine and someone operating at a high level of technical skill as
a developer, technologist and leader. For several years I've been an IT contractor. Over
the course of this year, I want to transition into doing more leveraged training
and coaching work.

The way I envisage this working - which has not yet been tested by first contact
with the enemy :-) is that I will sell a mixture of premium digital products and
high ticket consulting with clients. The digital products will start with a
course on instilling operational excellence within a development team. It will
be aimed at either the business owner or the technical team lead. Further
courses may well follow such as:

- Becoming a better developer
- How to work within a team
- How to structure training

The coaching side of the business is envisaged as a leveraged delivery model (so
many clients at once) offering an operational transformation over approximately
a 90 day period. It will more than likely be based on the structure of the
initial course that I plan to start selling in the next month or so. So: 6 ish
sections (TBC) each with a theory and practice element to them. Delivery will
hopefully be remote with the theory and practice being delivered at the
beginning of the week and some form of implementation and follow up offered
before the next module in about 2 weeks time.

** Who Am I?
:PROPERTIES:
:EXPORT_FILE_NAME: me
:EXPORT_HUGO_WEIGHT: 10
:END:

Brand and values

<!--more-->

*** What do I do?

I have a unique background (pretty much). I don't know of anyone else who's had
elite military experience and then gone on to have a career is technology and
programming (at least on the implementation side). I've also had a life long
interest in studying psychology and high performance. I want to apply these 3
aspects to helping tech companies build the best teams possible.

{{% blockquote title="Positioning Statement" %}}

 I help early stage tech companies navigate the phase shift from start up to
 established company. Having built and led teams in all sizes of company and
 leaning on experience of elite military operations from my time in the Royal
 Marine Commandos I will show you how to implement standards without stifling
 your essence. Operational excellence is the fuel you must have to propel you to
 the next level, I can help get you there.
{{% /blockquote %}}

*** How do I do it?
I will offer a transformation based around the core principle of helping
understand their feedback loops at all levels of the company and how to optimise
them. At the end of my engagement companies will have effective development
teams that are aligned with the mission and purpose of the company and
operationally set up for repeatable high performance. They will have an
operating manual which serves many purposes:

- A living record of the way things are done
- A set of instructions for existing staff
- An onboarding aim for new hires
- A record of the company's culture and values
*** What's my point of difference
I have several major points of difference:

**** Military background
This gives me a very unusual perspective compared to the vast majority of people
in tech.
**** Self taught
I am self directed and motivated (and learning to code on a warship is a cool story)
**** Leadership and team building experience
I've walked the walk both at start ups and established companies.
**** Broad background knowledge and intuition
I've read probably 500 or so books on leadership/development/military theory, and
I've made links between all of these to come up with a simple focus on
principles which I think is pretty unique
*** Who am I doing this for?
In the first instance I'm doing this for my customers. But I have an eye on
being able to give back and pay it forward for lads that come after me, or those
that haven't been as lucky as me.
**** Ideal customers
My ideal customer is a growing software or technology company which is
navigating the inevitable social inflection points that a growing team hits.

I'm looking for companies that are at the 30 ish or 100-150 ish people phase
shifts. It's at these point where there is a shift to more or different process
and I want to position myself to mentor the company or tech leadership to
successfully navigate this change.

The company should have a clear mission and purpose (or at least stand a chance
of defining that) and should want to be in the cutting edge of innovation and
learning. They are most probably a start up growing into an established company
but experiencing some growing pains getting there.

Operational Excellence should put the company in the exceptional quadrant on all
the metrics that matter from Accelerate (a book about devops with a very
quantitative approach) and will ensure that they can out manoeuvre their
competition and the market incumbents.

The engagement will most likely look like an intensive period of transformation
during which the implementation plan is formulated and I ensure that the company
has the tools and aptitude to succeed. Once they have that I will scale down to
an advisory and mentoring role and look at a retainer going forward.

Outcomes for the company will be a more agile, able team that is fully aligned
with the missing and able to execute efficiently to give the company the
greatest possible chance of shaping and adapting to unfolding circumstances and
surviving on their own terms.
**** People leaving the forces
When people (especially enlisted) leave the forces they still aren't getting
good information. I would like to be able to take any success I have from this
venture and help show people leaving the forces just how fundamental the skills
and experiences they have had are.

**** Military Charities
I also want to be successful enough that I can comfortably give some percentage
of my time and earnings to charities/causes who are helping those that haven't
had it so easy. For example Rock2Recovery and others doing great work.
*** Values
Courage, Determination, Unselfishness, Cheerfulness in the face of adversity,
Humility, Excellence, Integrity. All of these are relevant from our time in the
corps. Some other values I've picked up along the way:

*Elegance* - spend a bit more effort to find a solution that is unforced and
natural.

*Structure* - find the right amount to be supportive, not stifling.

*Fundamental* - keep deconstructing until you have reached something
irreducible.

*Kaizen* - always be learning and improving.

*Detachment* - take the world as it is, not as you wish it was.

*** Personality
The personality of Commando Development should in many ways reflect that of the
corps.

*Confidence* tempered with humility: We know what we can do, but we know how much
more there is to learn.

*Precicision* We strive for clarity and succinctness.

*Sharp* and focused

*Wry sense of humor* We don't take ourselves too seriously

*Unflappable* We deal with whatever comes our way calmly


** Logistics
:PROPERTIES:
:EXPORT_FILE_NAME: logistics
:EXPORT_HUGO_WEIGHT: 20
:END:

General commercial info and planning info

<!--more-->

*** Company details
Commando Development Ltd
https://commandodev.com

(contacts on the website)

I also own:

- commandodevelopment.com
- commandodev.co.uk
- cdodev.co.uk
- commandodeveloper.com
- commandodevelopers.com

*** Intended launch date
Web site is already live. I'd like to get a more on brand presence out there be
within 30 days as that's the time frame that I want to work to for beginning to
get customers
*** Budget
Limited - I want something constrained enough that I'm not totally embarrased,
but that's enough for me to start selling. After I get revenue, I'm very
prepared to plow some of that back into improving the brand and message
*** Current website
The current website is something that I've put together as a mean to start
gathering content. I like the minimalist feel, but I want to develop a proper
band voice.

It's using the unify theme and built using bootstrap:
https://htmlstream.com/preview/unify-v2.6/index.html. There are various elements
available like paralax images, video carosels etc.

At the moment there has been no marketing and the site, although live, is
essentually hidden.

*** Purpose of new website
The new website is intended to be where I hand my shingle out and as a primary
marketing source. It will more than likely be where I send customers to specific
landing pages and well as to capture details for marketing purposes. Over time I
will integrate things like:

- Email address gathering (convertkit)
- Segmentation and A/B testing (right message)
- Consulting call booking (calendly)
- Custom built functionality
- SaaS apps if and when appropriate

**** Audience
The primary audience (at least at first) will be cold and warm leads who come in
through paid advertising channels. I will almost certainly want to segment them
into separate audiences. The two big divisions I forsee to start with are
technical leaders or business owners vs individual contributors or more junior
folks.

They will have a technical background and will most likely be the kinds of
people that will notice any less well executed elements. For this reason the
site will be static (for speed) served over https, and must look extremely
technically competent.

People will be sent to the site for the primary reason of growing my audience
initially - I doubt I'll be selling directly from the site to start with.
**** Perception
I'm trying to bring the ethos that we know from the corps to software
development. So:

excellence, precision, persistence, elite, pragmatic, good enough vs perfect,
continuous improvement, curiosity, performance, process, shared standards,
courage to do the right thing,

*** Competitors/similar companies
I don't really have any direct competitors I don't think. There are people like
agile, change and leadership consultants like the following. But I don't know of
any one in particular doing operational excellence specifically

**** Dan North
https://dannorth.net/

**** Accomplish (ex bootnecks as well)
I like the clean look these guys have
http://www.accomplish.world/

**** Albany
https://www.albanyassociates.com/
**** Leadership Forces
Rod is an ex bootneck and someone I may well partner with in future
http://www.leadershipforces.com/

**** DRM group
David is an ex bootneck selling resilience mainly to larger companies
https://www.drmgroup.co.uk/
**** EQ Commando
Shaun is an ex bootneck, now doing emotional intelligence coaching
https://www.eq2lead.uk/the-eq-commando
*** Inspiration
**** Jame Clear
I like the clean look and the content organisation
https://jamesclear.com/
**** Double your freelancing
Brennan is a master at marketing and systemising
https://doubleyourfreelancing.com/
**** Stacking the bricks
Amy Hoy is also a master at selling digital products and courses
https://stackingthebricks.com/
**** Cal Newport
Cal is a minimalist and productivity expert
http://calnewport.com
**** Rob Stewart
Ex RAF pilot. Teaches coaches marketing and systems
http://www.robstewartglobal.com/

** Content
:PROPERTIES:
:EXPORT_FILE_NAME: content
:EXPORT_HUGO_WEIGHT: 30
:END:

Types of content and elements

<!--more-->

** Technology
:PROPERTIES:
:EXPORT_FILE_NAME: tech
:EXPORT_HUGO_WEIGHT: 40
:END:

Implementation plan and technology

<!--more-->
* Footnotes

[fn:1] https://fs.blog/mental-models/
* COMMENT Local Variables                                           :ARCHIVE:
# Local Variables:
# eval: (org-hugo-auto-export-mode)
# eval: (auto-fill-mode 1)
# End:
